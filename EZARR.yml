services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=13001
      - PGID=13000
      - UMASK=002
      - TZ=UTC
    volumes:
      - ${STORAGE}/config/sonarr-config:/config
      - ${STORAGE}/data:/data
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.meganet.fun`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
    restart: unless-stopped

  # radarr:
  #   image: lscr.io/linuxserver/radarr:latest
  #   container_name: radarr
  #   environment:
  #     - PUID=13002
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=UTC
  #   volumes:
  #     - ${STORAGE}//config/radarr-config:/config
  #     - ${STORAGE}/data:/data
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.radarr.rule=Host(`radarr.meganet.fun`)"
  #     - "traefik.http.routers.radarr.entrypoints=web"
  #   restart: unless-stopped

  # lidarr:
  #   image: lscr.io/linuxserver/lidarr:latest
  #   container_name: lidarr
  #   environment:
  #     - PUID=13003
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=UTC
  #   volumes:
  #     - ${STORAGE}/config/lidarr-config:/config
  #     - ${STORAGE}/data:/data
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.lidarr.rule=Host(`lidarr.meganet.fun`)"
  #     - "traefik.http.routers.lidarr.entrypoints=web"
  #   restart: unless-stopped

  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   environment:
  #     - PUID=13004
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=UTC
  #   volumes:
  #     - ${STORAGE}/config/readarr-config:/config
  #     - ${STORAGE}/data:/data
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.readarr.rule=Host(`readarr.meganet.fun`)"
  #     - "traefik.http.routers.readarr.entrypoints=web"
  #   restart: unless-stopped

  # mylar3:
  #   image: lscr.io/linuxserver/mylar3:latest
  #   container_name: mylar3
  #   environment:
  #     - PUID=13005
  #     - PGID=13000
  #     - UMASK=002
  #   volumes:
  #     - ${STORAGE}/config/mylar-config:/config
  #     - ${STORAGE}/data:/data
  #   networks:
  #       - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.mylar3.rule=Host(`mylar.meganet.fun`)"
  #     - "traefik.http.routers.mylar3.entrypoints=web"
  #   restart: unless-stopped

  # audiobookshelf:
  #   image: ghcr.io/advplyr/audiobookshelf:latest
  #   container_name: audiobookshelf
  #   environment:
  #     - user=13014:13000
  #     - TZ=UTC
  #   volumes:
  #     - ${STORAGE}/config/audiobookshelf:/config
  #     - ${STORAGE}/data/media/audiobooks:/audiobooks
  #     - ${STORAGE}/data/media/podcasts:/podcasts
  #     - ${STORAGE}/data/media/audiobookshelf-metadata:/metadata
  #   ports:
  #     - "13378:80"
  #   restart: unless-stopped

  # bazarr:
  #   image: lscr.io/linuxserver/bazarr:latest
  #   container_name: bazarr
  #   environment:
  #     - PUID=13013
  #     - PGID=13000
  #     - TZ=UTC
  #   volumes:
  #     - ${STORAGE}/config/bazarr-config:/config
  #     - ${STORAGE}/data/media:/media
  #   networks:
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.bazarr.rule=Host(`bazarr.meganet.fun`)"
  #     - "traefik.http.routers.bazarr.entrypoints=web"
  #   restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=13012
      - PGID=13000
      - UMASK=002
      - TZ=UTC
    volumes:
      - ${STORAGE}/config/jellyseerr-config:/app/config
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseer.rule=Host(`requests.meganet.fun`)"
      - "traefik.http.routers.jellyseer.entrypoints=web"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=13006
      - PGID=13000
      - UMASK=002
      - TZ=UTC
    volumes:
      - ${STORAGE}/config/prowlarr-config:/config
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.meganet.fun`)"
      - "traefik.http.routers.prowlarr.entrypoints=web"
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=UTC
    networks:
      - internal
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=13000
      - UMASK=002
      - TZ=UTC
    volumes:
      - ${STORAGE}/config/jellyfin-config:/config
      - ${STORAGE}/data/media:/data
   #   - /dev/dri/renderD128:/dev/dri/renderD128
   # devices:
     # - /dev/dri/renderD128:/dev/dri/renderD128
    #  - /dev/dri/card0:/dev/dri/card0
    networks:
        - internal
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.meganet.fun`)"
      - "traefik.http.routers.jellyfin.entrypoints=web"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=13007
      - PGID=13000
      - UMASK=002
      - TZ=UTC
      - WEBUI_PORT=8083
    volumes:
      - ${STORAGE}/config/qbittorrent-config:/config
      - ${STORAGE}/data/torrents:/data/torrents
    networks:
        - internal
    restart: unless-stopped
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.qbit.rule=Host(`qbit.meganet.fun`)"
        - "traefik.http.routers.qbit.entrypoints=web"
        - "traefik.http.services.your-service.loadbalancer.server.port=8083"
